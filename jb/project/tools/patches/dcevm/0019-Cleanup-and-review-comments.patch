From 3b09df69c007285ea6c258388532a8e5f9fe3d45 Mon Sep 17 00:00:00 2001
From: Vladimir Dvorak <vladimir.dvorak@jetbrains.com>
Date: Sun, 22 Nov 2020 12:03:32 +0100
Subject: [PATCH 19/39] Cleanup and review comments

---
 src/hotspot/share/classfile/classLoaderDataGraph.hpp     | 2 +-
 src/hotspot/share/gc/shared/gcConfig.cpp                 | 2 +-
 src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp | 1 +
 src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.hpp | 2 +-
 4 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/hotspot/share/classfile/classLoaderDataGraph.hpp b/src/hotspot/share/classfile/classLoaderDataGraph.hpp
index 5f8913001b0..c3bcc7271e6 100644
--- a/src/hotspot/share/classfile/classLoaderDataGraph.hpp
+++ b/src/hotspot/share/classfile/classLoaderDataGraph.hpp
@@ -105,7 +105,7 @@ class ClassLoaderDataGraph : public AllStatic {
 
   static void dictionary_classes_do(KlassClosure* klass_closure);
 
-  // Enhanced class redefinition
+  // (DCEVM) Enhanced class redefinition
   static void rollback_redefinition();
 
   // VM_CounterDecay iteration support
diff --git a/src/hotspot/share/gc/shared/gcConfig.cpp b/src/hotspot/share/gc/shared/gcConfig.cpp
index 26a2b67b8e9..8e78696bef5 100644
--- a/src/hotspot/share/gc/shared/gcConfig.cpp
+++ b/src/hotspot/share/gc/shared/gcConfig.cpp
@@ -97,7 +97,7 @@ void GCConfig::fail_if_non_included_gc_is_selected() {
 
 void GCConfig::select_gc_ergonomically() {
   if (AllowEnhancedClassRedefinition && !UseG1GC) {
-    // Enhanced class redefinition only supports serial GC at the moment
+    // (DCEVM) Enhanced class redefinition only supports serial GC at the moment
     FLAG_SET_ERGO(UseSerialGC, true);
   } else if (os::is_server_class_machine()) {
 #if INCLUDE_G1GC
diff --git a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
index 590f7fdfafe..2a7dd35bdd1 100644
--- a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
+++ b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
@@ -842,6 +842,7 @@ jvmtiError VM_EnhancedRedefineClasses::load_new_class_versions(TRAPS) {
       k->class_loader_data()->exchange_holders(the_class->class_loader_data());
 
       if (the_class->is_hidden()) {
+      // TODO: (DCEVM) review if is correct
       // from jvm_lookup_define_class() (jvm.cpp):
       // The hidden class loader data has been artificially been kept alive to
       // this point. The mirror and any instances of this class have to keep
diff --git a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.hpp b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.hpp
index bd5e7d153be..5de375fb888 100644
--- a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.hpp
+++ b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.hpp
@@ -78,7 +78,7 @@ class VM_EnhancedRedefineClasses: public VM_GC_Operation {
   // have any entries.
   bool _any_class_has_resolved_methods;
 
-  // Enhanced class redefinition, affected klasses contain all classes which should be redefined
+  // (DCEVM) Enhanced class redefinition, affected klasses contain all classes which should be redefined
   // either because of redefine, class hierarchy or interface change
   GrowableArray<Klass*>*      _affected_klasses;
 
-- 
2.23.0

